{"version":3,"file":"chunk-c85dad1d.js","sources":["../src/singleton/proxyRequest/provider/LocalProvider/libs/utils.js","../src/singleton/proxyRequest/provider/LocalProvider/libs/itemsRequest.js","../src/singleton/proxyRequest/provider/LocalProvider/libs/routeMethods.js","../src/singleton/proxyRequest/provider/LocalProvider/libs/db.js","../src/singleton/proxyRequest/provider/LocalProvider/routes.js","../src/singleton/proxyRequest/provider/LocalProvider/Database.js"],"sourcesContent":["import regPath from 'path-to-regexp';\n\nconst utils = {\n  getRouteKey(routesRegexp, routePath) {\n    return Object.keys(routesRegexp).find(key => {\n      const re = routesRegexp[key];\n      return re.test(routePath);\n    });\n  },\n  getPath(serverUrl, url) {\n    const levels = url.split(serverUrl);\n    const keysPath = levels.pop() || '';\n    const ret = keysPath[0] === '/' ? keysPath.substring(1) : keysPath;\n\n    return ret;\n  },\n  getPathArgs(routesRegexp, key, routePath) {\n    const keys = regPath.parse(key);\n    const re = routesRegexp[key];\n    re.lastIndex = 0; // drop exec position\n\n    const values = re.exec(routePath);\n    return keys.reduce((map, item, index) => {\n      if (item && item.name) {\n        map[item.name] = values[index];\n      }\n      return map;\n    }, {});\n  },\n};\n\nexport default utils;\n","const itemsRequest = {\n  getItemData(list) {\n    return list.map(node => node.data);\n  },\n  itemsRead(table) {\n    return table.toArray(list => itemsRequest.getItemData(list));\n  },\n  itemRead(table, whereExp) {\n    return new Promise((resolve, reject) => {\n      table\n        .where(whereExp)\n        .first(node =>\n          node && node.data ? resolve(node.data) : reject('Data is empty'),\n        )\n        .catch(reject);\n    });\n  },\n  itemRemove(table, whereExp) {\n    return table.where(whereExp).delete();\n  },\n  itemWrite(table, id, payload) {\n    // scheme default for all tables\n    return table.put({\n      id,\n      data: payload,\n    });\n  },\n  async itemAdd(table, id, payload) {\n    const stored = {};\n    try {\n      const res = await itemsRequest.itemRead(table, { id });\n      Object.assign(stored, res || {});\n    } catch (e) {}\n\n    const pushData = {\n      id,\n      data: {\n        ...stored,\n        ...payload,\n      },\n    };\n    return table.put(pushData);\n  },\n};\n\nexport default itemsRequest;\n","import itemsRequest from './itemsRequest';\n\nfunction getId(route, args) {\n  const { id } = route;\n  const res = typeof id === 'function' ? id(args) : args[id];\n  return res;\n}\n\nconst routeMethods = {\n  read(route, args) {\n    if (!route.id) {\n      return itemsRequest.itemsRead(route.table);\n    }\n    const id = getId(route, args);\n    return itemsRequest.itemRead(route.table, { id });\n  },\n  add(route, args, params) {\n    const id = getId(route, args);\n    return itemsRequest.itemAdd(route.table, id, params.payload);\n  },\n  write(route, args, params) {\n    const id = getId(route, args);\n    return itemsRequest.itemWrite(route.table, id, params.payload);\n  },\n  remove(route, args, params) {\n    const id = getId(route, args);\n    return itemsRequest.itemRemove(route.table, { id }, params.payload);\n  },\n};\n\nexport default routeMethods;\n","import Dexie from 'dexie';\n\nconst db = new Dexie('LocalProvider');\n\ndb.version(1.1).stores({\n  accounts: 'id,data',\n  accountsInfo: 'id,data',\n  settings: 'id,data',\n  tokens: 'id,data',\n  networks: 'id,data',\n});\n\nexport default db;\n","import db from './libs/db';\nimport itemsRequest from './libs/itemsRequest';\nimport routeMethods from './libs/routeMethods';\n\nfunction getNetworkId(id) {\n  return id.split('/')[0];\n}\n\nconst routes = {\n  'account/:addressId/info': {\n    table: db.accountsInfo,\n    id: 'addressId',\n  },\n  'account/:addressId': {\n    table: db.accounts,\n    id: 'addressId',\n  },\n  'networks/:networkPath(.*)': {\n    table: db.networks,\n    id: 'networkPath',\n  },\n  'tokens/:networkId': {\n    // only read\n    table: db.tokens,\n    read(route, args) {\n      return route.table\n        .filter(item => getNetworkId(item.id) === args.networkId)\n        .toArray(list => itemsRequest.getItemData(list));\n    },\n  },\n  'tokens/:networkId/:addressId': {\n    table: db.tokens,\n    id: args => `${args.networkId}/${args.addressId}`,\n  },\n  accounts: {\n    table: db.accounts,\n    async read(route) {\n      const list = await itemsRequest.itemsRead(route.table);\n      const ret = list.map(item => item.address);\n      return ret;\n    },\n  },\n  settings: {\n    table: db.settings,\n    id: () => 'userSettings',\n    async init(route) {\n      const initialData = {\n        email: ENV.isProduction ? '' : 'default@email.com',\n        otp_enabled: false,\n      };\n\n      let data;\n      try {\n        data = await routeMethods.read(route);\n      } catch (e) {\n        data = {};\n      }\n      const payload = { ...initialData, ...data };\n      if (!payload.email) {\n        payload.email = initialData.email;\n      }\n\n      return routeMethods.add(route, {}, { payload });\n    },\n    async read(route, args) {\n      const [tokens, networks, settings] = await Promise.all([\n        db.tokens.toArray(list =>\n          // create list of tokens in network id map. { netId:[token1, token2, ], }\n          list.reduce((map, item) => {\n            const netId = getNetworkId(item.id);\n            const tokenList = (map[netId] = map[netId] || []);\n            tokenList.push(item.data);\n            return map;\n          }, {}),\n        ),\n        db.networks.toArray(list => itemsRequest.getItemData(list)),\n        routeMethods.read(route, args),\n      ]);\n\n      return {\n        tokens,\n        networks,\n        ...settings,\n      };\n    },\n  },\n  'settings/otp': {\n    table: db.settings,\n    id: () => 'otp',\n  },\n};\n\nexport default routes;\n","import regPath from 'path-to-regexp';\nimport utils from './libs/utils';\nimport routeMethods from './libs/routeMethods';\nimport routes from './routes';\n\nconst routesRegexp = Object.keys(routes).reduce((res, key) => {\n  res[key] = regPath(key);\n  return res;\n}, {});\n\nexport default class Database {\n  constructor(url) {\n    this.serverUrl = url;\n  }\n\n  async initRoutes() {\n    const list = Object.keys(routes).filter(key => !!routes[key].init);\n    await Promise.all(\n      list.map(key => {\n        const route = routes[key];\n        return route.init(route);\n      }),\n    );\n  }\n\n  async request(params) {\n    const { url, method } = params;\n    if (method === 'clear') {\n      return this.clear();\n    }\n\n    const path = utils.getPath(this.serverUrl, url);\n    const routeKey = utils.getRouteKey(routesRegexp, path);\n    if (!routeKey) {\n      throw new Error(`not defined route key in ${path}`);\n    }\n    const route = routes[routeKey];\n    const args = utils.getPathArgs(routesRegexp, routeKey, path);\n    const routeMethod = route[method] || routeMethods[method];\n\n    return routeMethod(route, args, params);\n  }\n\n  clear() {\n    const map = {};\n    const list = Object.keys(routes).filter(key => {\n      const { table } = routes[key];\n      const filtered = !map[table.name];\n      map[table.name] = true;\n      return filtered;\n    });\n    const tables = list.map(key => routes[key].table);\n    return Promise.all(tables.map(table => table.clear()));\n  }\n}\n"],"names":["utils","getRouteKey","routesRegexp","routePath","Object","keys","find","key","re","test","getPath","serverUrl","url","levels","split","keysPath","pop","ret","substring","getPathArgs","regPath","parse","lastIndex","values","exec","reduce","map","item","index","name","itemsRequest","getItemData","list","node","data","itemsRead","table","toArray","itemRead","whereExp","Promise","resolve","reject","where","first","catch","itemRemove","delete","itemWrite","id","payload","put","itemAdd","stored","res","assign","pushData","getId","route","args","routeMethods","read","add","params","write","remove","db","Dexie","version","stores","accounts","accountsInfo","settings","tokens","networks","getNetworkId","routes","filter","networkId","addressId","address","init","initialData","email","ENV","isProduction","otp_enabled","all","netId","tokenList","push","Database","method","clear","path","routeKey","Error","routeMethod","filtered","tables"],"mappings":"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"}